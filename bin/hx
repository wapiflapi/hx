#!/usr/bin/env python3

import sys
import argparse

import hx

if __name__ == '__main__':

    parser = argparse.ArgumentParser()

    parser.add_argument("file", nargs="?", type=argparse.FileType("rb"),
                        default=sys.stdin.buffer,
                        help="file to read instead of stdin")

    parser.add_argument("-d", "--debug", action='store_true',
                        help="show debuging info when ")
    parser.add_argument("-c", "--colors", action='store_true',
                        help="force colors")
    parser.add_argument("--no-colors", action='store_false', dest='colors',
                        help="strip colors")
    parser.add_argument("--show-sigpipe", action='store_true', dest='spipe',
                        help="ignore broken pipes")
    parser.add_argument("--no-columns", action='store_false', dest='columns',
                        help="don't hilight columns")

    parser.add_argument("--bpg", type=int, help="bytes per group")
    parser.add_argument("--gpl", type=int, help="groups per line")
    parser.add_argument("--fmt", type=str, help="group format string")

    kind = parser.add_mutually_exclusive_group()
    kind.add_argument("-b", "--bin", action=hx.BinDflts,
                      help="show binary")
    kind.add_argument("-o", "--oct", action=hx.OctDflts,
                      help="show octal")
    kind.add_argument("-x", "--hex", action=hx.HexDflts,
                      help="show hexadecimal")

    parser.set_defaults(colors=sys.stdout.isatty())

    parser.set_defaults(
        bpg=hx.HexDflts.bpg, gpl=hx.HexDflts.gpl, fmt=hx.HexDflts.fmt)

    args = parser.parse_args()

    hx.init_colorama(args.colors)

    dumper = hx.Dumper(args.bpg, args.gpl, args.fmt, args.columns)

    ignored = () if args.spipe or args.debug  else BrokenPipeError
    catched = () if args.debug else BaseException

    try:
        dumper.dump(args.file)
    except ignored:
        pass
    except catched as e:
        print(e)
        sys.exit(1)
